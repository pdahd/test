name: Test N_m3u8DL-CLI

on:
  workflow_dispatch:

jobs:
  test-m3u8dl-cli:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download N_m3u8DL-CLI
      run: |
        Invoke-WebRequest -Uri https://github.com/nilaoda/N_m3u8DL-CLI/releases/download/3.0.2/N_m3u8DL-CLI_v3.0.2.exe -OutFile N_m3u8DL-CLI.exe

    - name: Download ffmpeg
      run: |
        Invoke-WebRequest -Uri https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip -OutFile ffmpeg-latest.zip
        Expand-Archive -Path ffmpeg-latest.zip -DestinationPath ffmpeg
        Move-Item ffmpeg/*/bin/ffmpeg.exe .

    - name: Create input file
      run: |
        echo "https://play-edge.itunes.apple.com/WebObjects/MZPlayLocal.woa/hls/subscription/playlist.m3u8?cc=US&svcId=tvs.vds.4105&a=1651530204&isExternal=true&brandId=tvs.sbd.4000&id=529784868&l=en-US&aec=UHD" > input.txt

    - name: Test N_m3u8DL-CLI
      run: |
        mkdir workdir
        .\N_m3u8DL-CLI.exe $(Get-Content input.txt) --enableParseOnly --workDir workdir
        dir workdir

    - name: Display raw.m3u8 content
      run: |
        $timestamp = Get-ChildItem -Directory workdir | Select-Object -First 1 -ExpandProperty Name
        Get-Content "workdir\$timestamp\raw.m3u8"

    - name: Extract highest quality streams
      run: |
        $timestamp = Get-ChildItem -Directory workdir | Select-Object -First 1 -ExpandProperty Name
        $rawFile = Get-Content "workdir\$timestamp\raw.m3u8"
        $highestVideo = $rawFile | Select-String -Pattern "CODECS=.*RESOLUTION=3840x1606" -Context 0,1 | Select-Object -Last 1
        $highestAudio = $rawFile | Select-String -Pattern "#EXT-X-MEDIA:TYPE=AUDIO" -Context 0,1 | Where-Object { $_ -match "audio-atmos" } | Select-Object -Last 1
        $videoUrl = $highestVideo.Context.PostContext[0]
        $audioUrl = $highestAudio.Context.PostContext[1]
        echo "Highest quality video URL: $videoUrl" > highest_quality_urls.txt
        echo "Highest quality audio URL: $audioUrl" >> highest_quality_urls.txt

    - name: Display highest quality URLs
      run: |
        Get-Content highest_quality_urls.txt

    - name: Download and merge highest quality streams
      run: |
        $urls = Get-Content highest_quality_urls.txt
        $videoUrl = $urls[0].Substring(27)  # Removing "Highest quality video URL: "
        $audioUrl = $urls[1].Substring(27)  # Removing "Highest quality audio URL: "
        .\ffmpeg\bin\ffmpeg.exe -i $videoUrl -c copy video.mp4
        .\ffmpeg\bin\ffmpeg.exe -i $audioUrl -c copy audio.mp4
        .\ffmpeg\bin\ffmpeg.exe -i video.mp4 -i audio.mp4 -c copy final_output.mp4
        Remove-Item video.mp4, audio.mp4
